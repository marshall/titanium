/*
 * WARNING this file was generated by Appcelerator's idl2npapi
 */
#ifndef _${interface.name?upper_case}_H
#define _${interface.name?upper_case}_H

#include <npapi.h>
#include <npruntime.h>
#include <string>

<#list getReferencedInterfaces(interface) as ref>
#include "${ref}.h"
</#list>

<#macro cType type><#assign _cType = toCType(type)><#if _cType == "NPObject *" && hasNativeImpl(type)>${type}*<#else>${_cType}</#if></#macro>
<#macro upperCamelCase string>${string[0]?upper_case + string?substring(1)}</#macro>

class ${interface.name} : public NPObject
{
public:
	
	<#list interface.attributes as attr>
	virtual <@cType type=attr.type/> Get<@upperCamelCase string=attr.name/>() = 0;
	<#if !attr.readOnly>
	virtual void Set<@upperCamelCase string=attr.name/>(<@cType type=attr.type/> value) = 0;
	 </#if>

	</#list>
	
	<#list interface.methods as method>
	virtual <@cType type=method.returnType/> ${method.name} (<#list method.arguments as arg><@cType type=arg.type/> ${arg.name}<#if arg_index < method.arguments?size-1>, </#if></#list>) = 0;
	</#list>
	
	<#list interface.constants as constant>
	static const <@cType type=constant.type/> ${constant.name} = ${constant.value};
	</#list>
};

#endif