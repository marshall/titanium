/*
 * WARNING this file was generated by Titanium's idlgen
 */
#include "${interface.name}.h"

namespace ${interface.name} {
	JsObject* jsObject = NULL;
}


<#list interface.methods as method>
extern "C" VALUE ${interface.name}_${method.name} (
	VALUE self<#list method.arguments as arg><#if arg_index <= method.arguments?size-1>, </#if>
	VALUE ${arg.name}</#list>)
{	
	if (${interface.name}::jsObject != NULL) {
<#if method.returnType != "void">
		JsRootedToken *token;
</#if>
		VALUE argv[] = {<#list method.arguments as arg>${arg.name}<#if arg_index < method.arguments?size-1>, </#if></#list>};
		
		if (InvokeJsCallback(${interface.name}::jsObject, "${method.name}",
			${method.arguments?size}, argv, <#if method.returnType != "void">&token<#else>NULL</#if>))
		{
<#if method.returnType != "void">
	<#if method.returnType == "string">
			return JsRootedTokenToRubyValue(token, JSPARAM_STRING16);
	<#elseif method.returnType == "bool">
			return JsRootedTokenToRubyValue(token, JSPARAM_BOOL);
	<#elseif method.returnType == "object">
			return JsRootedTokenToRubyValue(token, JSPARAM_OBJECT);
	</#if>
</#if>
		}
	}
	return Qnil;
}
</#list>

VALUE ${interface.name}_Class;
void ${interface.name}::DefineClass(RubyInitializer *initializer)
{
	${interface.name}::jsObject = initializer->GetCallbackObject();
	
	${interface.name}_Class = rb_define_class("${interface.name}", rb_cObject);
	<#list interface.methods as method>
	rb_define_method(${interface.name}_Class, "${method.name}", RUBY_FUNCTION(&${interface.name}_${method.name}), ${method.arguments?size});
	</#list>
}