/*
 * WARNING this file was generated by Titanium's idlgen
 */
 
#ifndef _APP_COMMAND_H
#define _APP_COMMAND_H

#include "gears/base/common/js_types.h"
#include "gears/base/common/dispatcher.h"

extern "C" {
#include <ruby.h>
}

<#macro upperCamelCase string>${string[0]?upper_case + string?substring(1)}</#macro>

class RubyWrapper;

class AppCommand : public ModuleImplBaseClass {
public:
	AppCommand();
	void DefineClasses();
	static const std::string kModuleName;
	JsObject* jsObject;
	JsObject* appOptions;
	
	void App (JsCallContext *context);
	void Sleep (JsCallContext *context);
	
<#list interfaces as interface>
<#list interface.methods as method>
	<#list method.arguments as arg>
		<#if arg.type == "callback">
	VALUE ${interface.name}_${method.name}Callback;
	void ${interface.name}_Execute<@upperCamelCase string=method.name/>Callback(JsCallContext *context);
		</#if>
	</#list>	
</#list>
</#list>

private:
	~AppCommand();
	DISALLOW_EVIL_CONSTRUCTORS(AppCommand);
};

#endif